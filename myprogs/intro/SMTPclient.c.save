#include "unp.h"

int main(int argc, char const *argv[])
{
	int sockfd, n;
	char recvline[MAXLINE + 1];
	struct sockaddr_in servaddr;
	char buff[MAXLINE+1];
	char message[] = "Hello";
	char from[25] = "SuperSaiyanSwagger@vegata.com";
	char to[25] = "islarf6546@gmail.com";
	char temp[30];

	if (argc != 3)  {
		err_quit("usage: a.out <IPaddress>");
	}
	if ((sockfd = socket(AF_INET, SOCK_STREAM, 0)) <0)  {
		err_sys("socket error");
	}

	bzero(&servaddr, sizeof(servaddr));
	servaddr.sin_family = AF_INET;
	servaddr.sin_port = htons(atoi(argv[2]));

	if (inet_pton(AF_INET, argv[1], &servaddr.sin_addr)<=0)  {
		err_quit("inet_pton error for %s", argv[1]);
	}

	if (connect(sockfd, (SA *) &servaddr, sizeof(servaddr))<0)  {
		/* code */
		err_sys("connect error");
	}

	snprintf(buff,sizeof(buff), " /index.html HTTP/1.1\r\nHost: www.comp.dit.ie\r\nConnection: close\r\n\r\n");
	//construct the data to return to the client
	Write(sockfd, buff, strlen(buff));//write data to the client


	while((n=read(sockfd, recvline, MAXLINE)) > 0)  {

		recvline[n] = 0;
		if (fputs(recvline, stdout) == EOF)
		{
			err_sys("fputs error");
		}
	}

	if(n<0)  {
		err_sys("read error");
	}

	exit(0);
}
